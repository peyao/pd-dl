{"version":3,"sources":["services/DownloadPngService.js","components/ControlCard.js","App.js","reportWebVitals.js","index.js"],"names":["CF_WORKER","OUTPUT_ZIP_FILENAME","PARAM_KEYS","constructPngFilename","currPage","endPage","totalDigits","length","currPageDigits","fileName","i","constructDownloadUrl","baseUrl","documentId","pageNum","opts","contentType","showCfWorkerPath","cfWorkerPath","downloadPng","a","Promise","reject","downloadUrl","fetch","method","mode","then","res","blob","progressCallback","zip","JSZip","imageBlobs","push","file","binary","generateAsync","type","content","saveAs","stripPageNumRegex","ControlCard","url","onJobStartClick","progress","progressFileName","useState","setBaseUrl","setDocumentId","scale","setScale","hasError","setHasError","startPage","setStartPage","setEndPage","lastPageLink","setLastPageLink","isLoading","setIsLoading","useEffect","urlObject","URL","searchParams","URLSearchParams","search","pathnameWithoutPagenum","exec","pathname","origin","get","has","console","log","handleJobStartClick","useCallback","className","value","onChange","e","target","href","rel","max","onClick","disabled","App","setUrl","setDownloadLink","setProgress","handleProgress","downloadPngRange","downloadLink","finally","placeholder","rows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159819fe.chunk.js","sourcesContent":["import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nconst CF_WORKER = \"https://plain-math-7b9e.peyao.workers.dev/\";\nconst OUTPUT_ZIP_FILENAME = \"pd-dl-output.zip\";\n\nexport const PARAM_KEYS = {\n  DOCUMENTID: \"DocumentID\",\n  SCALE: \"Scale\",\n  CONTENTTYPE: \"ContentType\"\n};\n\nfunction constructPngFilename(currPage, endPage) {\n  const totalDigits = (endPage + \"\").length;\n  const currPageDigits = (currPage + \"\").length;\n  let fileName = \"\";\n\n  for (let i = 0; i < totalDigits - currPageDigits; i++) {\n    fileName += \"0\";\n  }\n  fileName += currPage;\n\n  return `${fileName}.png`;\n}\n\nexport function constructDownloadUrl(baseUrl, documentId, pageNum, opts = {}) {\n  const { contentType = \"png\", showCfWorkerPath = false } = opts;\n  const cfWorkerPath = showCfWorkerPath ? `${CF_WORKER}?` : \"\"\n\n  return `${cfWorkerPath}${baseUrl}${pageNum}?${PARAM_KEYS.DOCUMENTID}=${documentId}&${PARAM_KEYS.CONTENTTYPE}=${contentType}`;\n}\n\nexport async function downloadPng(baseUrl, documentId, pageNum, opts = {}) {\n  if (!baseUrl || !documentId) Promise.reject(\"Failed downloadPng : Missing params\");\n\n  const downloadUrl = constructDownloadUrl(baseUrl, documentId, pageNum, { ...opts, showCfWorkerPath: true });\n\n  return fetch(\n    downloadUrl,\n    { method: \"GET\", mode: \"cors\" }\n  )\n    .then(res => res.blob())\n}\n\nexport async function downloadPngRange(baseUrl, documentId, startPage = 0, endPage = 1, opts = {}, progressCallback) {\n  if (!baseUrl || !documentId) Promise.reject(\"Failed downloadPngRange : Missing params\");\n\n  const zip = new JSZip();\n  const imageBlobs = [];\n\n  for (let currPage = 0; currPage < endPage; currPage++) {\n    const blob = await downloadPng(baseUrl, documentId, currPage, opts)\n    imageBlobs.push(blob);\n\n    const fileName = constructPngFilename(currPage, endPage);\n    zip.file(fileName, blob, { binary: true });\n    progressCallback((currPage + 1) / endPage * 100, fileName);\n  }\n\n  return zip.generateAsync({ type: \"blob\" }).then(content => {\n    saveAs(content, OUTPUT_ZIP_FILENAME);\n  });\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { PARAM_KEYS, constructDownloadUrl } from \"../services/DownloadPngService\";\n\nimport \"./ControlCard.scss\";\n\nconst stripPageNumRegex = /(.*)\\/[0-9]+$/;\n\nfunction ControlCard({ url, onJobStartClick, progress, progressFileName }) {\n\n  const [baseUrl, setBaseUrl] = useState();\n  const [documentId, setDocumentId] = useState();\n  const [scale, setScale] = useState(\"1\");\n  const [contentType, setContentType] = useState(\"png\");\n  const [hasError, setHasError] = useState(false);\n  const [startPage, setStartPage] = useState(0);\n  const [endPage, setEndPage] = useState(1);\n  const [lastPageLink, setLastPageLink] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    try {\n      const urlObject = new URL(url);\n      const searchParams = new URLSearchParams(urlObject.search);\n      const pathnameWithoutPagenum = stripPageNumRegex.exec(urlObject.pathname)[1];\n\n      setBaseUrl(`${urlObject.origin}${pathnameWithoutPagenum}/`);\n      setDocumentId(searchParams.get(PARAM_KEYS.DOCUMENTID));\n\n      if (searchParams.has(PARAM_KEYS.SCALE)) {\n        setScale(searchParams.get(PARAM_KEYS.SCALE));\n      }\n\n      setHasError(false);\n    } catch {\n      if (!url) return;\n\n      console.log(\"Couldn't extract details from URL: \", url);\n      setHasError(true);\n    }\n  }, [url]);\n\n  useEffect(() => {\n    if (baseUrl) {\n      setLastPageLink(\n        constructDownloadUrl(baseUrl, documentId, endPage - 1, { scale, contentType })\n      );\n    }\n  }, [baseUrl, endPage, documentId, contentType]);\n\n  useEffect(() => {\n    setIsLoading(progress > 0 && progress < 100);\n  }, [progress]);\n\n  const handleJobStartClick = useCallback(() => {\n    if (isLoading) return;\n    onJobStartClick(baseUrl, documentId, startPage, endPage, { scale, contentType });\n  }, [baseUrl, documentId, contentType, startPage, endPage, isLoading]);\n\n  if (!url) return null;\n\n  return (\n    <div className=\"control-card card\">\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">Job Info</div>\n      </header>\n      <div className=\"card-content\">\n        {hasError && <div className=\"notification is-danger\">Unable to extract info from URL</div>}\n\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>BaseUrl</td>\n              <td>{baseUrl}</td>\n            </tr>\n            <tr>\n              <td>DocumentId</td>\n              <td>{documentId}</td>\n            </tr>\n            <tr>\n              <td>ContentType</td>\n              <td>{contentType}</td>\n            </tr>\n            <tr>\n              <td>StartPage</td>\n              <td>\n                <input className=\"input is-small\" type=\"text\" value={startPage} onChange={e => setStartPage(e.target.value)} />\n              </td>\n            </tr>\n            <tr>\n              <td>EndPage</td>\n              <td>\n                <input className=\"input is-small\" type=\"text\" value={endPage} onChange={e => setEndPage(e.target.value)} />\n              </td>\n            </tr>\n            <tr>\n              <td>EndPage Link</td>\n              <td>\n                <a href={lastPageLink} target=\"_blank\" rel=\"noreferrer noopener\">{lastPageLink}</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <progress className=\"progress is-primary\" value={progress} max={100}>{progress}%</progress>\n      </div>\n      <footer className=\"card-footer\">\n        <a\n          className=\"card-footer-item button is-link\"\n          onClick={handleJobStartClick}\n          disabled={isLoading}\n        >\n          {progress === 0 || progress === 100 ? \"Start Job\" : progressFileName}\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default ControlCard;\n","import React, { useState, useCallback } from \"react\";\nimport './App.scss';\nimport ControlCard from \"./components/ControlCard\";\nimport { downloadPngRange } from \"./services/DownloadPngService\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [progress, setProgress] = useState({ value: 0, fileName: \"\" });\n\n  const handleProgress = useCallback((value, fileName) => {\n    setProgress({ value, fileName });\n  }, []);\n\n  const handleJobStartClick = useCallback((baseUrl, documentId, startPage, endPage, opts) => {\n    setIsLoading(true);\n\n    downloadPngRange(baseUrl, documentId, startPage, endPage, opts, handleProgress)\n      .then(downloadLink => setDownloadLink(downloadLink))\n      .finally(() => setIsLoading(false));\n  }, [handleProgress]);\n\n  return (\n    <div className=\"App\">\n      <header>pd-dl</header>\n\n      <div className=\"container\">\n        <textarea\n          className=\"textarea\"\n          placeholder=\"URL\"\n          rows=\"4\"\n          onChange={e => setUrl(e.target.value)}\n        />\n\n        <ControlCard url={url} onJobStartClick={handleJobStartClick} progress={progress.value} progressFileName={progress.fileName} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}