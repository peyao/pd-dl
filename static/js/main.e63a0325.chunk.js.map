{"version":3,"sources":["services/DownloadPngService.js","components/ControlCard.js","components/DownloadStatusCard.js","App.js","reportWebVitals.js","index.js"],"names":["PARAM_KEYS","constructDownloadUrl","baseUrl","documentId","pageNum","opts","contentType","downloadPng","a","Promise","reject","downloadUrl","console","log","fetch","method","mode","then","res","blob","URL","createObjectURL","endPage","imageBlobs","currPage","stripPageNumRegex","ControlCard","url","onJobStartClick","useState","setBaseUrl","setDocumentId","scale","setScale","hasError","setHasError","startPage","setStartPage","setEndPage","lastPageLink","setLastPageLink","useEffect","urlObject","searchParams","URLSearchParams","search","pathnameWithoutPagenum","exec","pathname","origin","get","has","handleJobStartClick","useCallback","className","type","value","onChange","e","target","href","rel","onClick","DownloadStatusCard","progress","downloadLink","disabled","App","setUrl","setIsLoading","setDownloadLink","downloadPngRange","finally","placeholder","rows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e63a0325.chunk.js","sourcesContent":["import pako from \"pako\";\n\nexport const PARAM_KEYS = {\n  DOCUMENTID: \"DocumentID\",\n  SCALE: \"Scale\",\n  CONTENTTYPE: \"ContentType\"\n};\n\nexport function constructDownloadUrl(baseUrl, documentId, pageNum, opts = {}) {\n  const { contentType = \"png\" } = opts;\n  return `${baseUrl}${pageNum}?${PARAM_KEYS.DOCUMENTID}=${documentId}&${PARAM_KEYS.CONTENTTYPE}=${contentType}`;\n}\n\nexport async function downloadPng(baseUrl, documentId, pageNum, opts = {}) {\n  if (!baseUrl || !documentId) Promise.reject(\"Failed downloadPng : Missing params\");\n\n  const downloadUrl = constructDownloadUrl(baseUrl, documentId, pageNum, opts);\n\n  console.log(\"downloadPng url: \", downloadUrl);\n\n  return fetch(\n    downloadUrl,\n    { method: \"GET\", mode: \"cors\" }\n  )\n    .then(res => res.blob())\n    .then(blob => {\n      console.log(\"blob: \", blob);\n      return URL.createObjectURL(blob)\n    });\n}\n\nexport async function downloadPngRange(baseUrl, documentId, startPage = 0, endPage = 1, opts = {}) {\n  if (!baseUrl || !documentId) Promise.reject(\"Failed downloadPngRange : Missing params\");\n\n  const imageBlobs = [];\n\n  for (let currPage = 0; currPage < endPage; currPage++) {\n    imageBlobs[currPage] = await downloadPng(baseUrl, documentId, currPage, opts)\n  }\n\n  console.log(\"imageBlobs: \", imageBlobs);\n\n  // TODO: Run URL.revokeObjectURL() for each of the imageBlobs\n  // imageBlobs.forEach(blobUrl => URL.revokeObjectURL(blobUrl));\n\n  return imageBlobs[0];\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { PARAM_KEYS, constructDownloadUrl } from \"../services/DownloadPngService\";\n\nimport \"./ControlCard.scss\";\n\nconst stripPageNumRegex = /(.*)\\/[0-9]+$/;\n\nfunction ControlCard({ url, onJobStartClick }) {\n\n  const [baseUrl, setBaseUrl] = useState();\n  const [documentId, setDocumentId] = useState();\n  const [scale, setScale] = useState(\"1\");\n  const [contentType, setContentType] = useState(\"png\");\n  const [hasError, setHasError] = useState(false);\n  const [startPage, setStartPage] = useState(0);\n  const [endPage, setEndPage] = useState(1);\n  const [lastPageLink, setLastPageLink] = useState(\"\");\n\n  useEffect(() => {\n    try {\n      const urlObject = new URL(url);\n      const searchParams = new URLSearchParams(urlObject.search);\n      const pathnameWithoutPagenum = stripPageNumRegex.exec(urlObject.pathname)[1];\n\n      setBaseUrl(`${urlObject.origin}${pathnameWithoutPagenum}/`);\n      setDocumentId(searchParams.get(PARAM_KEYS.DOCUMENTID));\n\n      if (searchParams.has(PARAM_KEYS.SCALE)) {\n        setScale(searchParams.get(PARAM_KEYS.SCALE));\n      }\n\n      setHasError(false);\n    } catch {\n      if (!url) return;\n\n      console.log(\"Couldn't extract details from URL: \", url);\n      setHasError(true);\n    }\n  }, [url]);\n\n  useEffect(() => {\n    if (baseUrl) {\n      setLastPageLink(\n        constructDownloadUrl(baseUrl, documentId, endPage - 1, { scale, contentType })\n      );\n    }\n  }, [baseUrl, endPage, documentId, contentType]);\n\n  const handleJobStartClick = useCallback(() => {\n    onJobStartClick(baseUrl, documentId, startPage, endPage, { scale, contentType });\n  }, [baseUrl, documentId, contentType, startPage, endPage]);\n\n  return (\n    <div className=\"control-card card\">\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">Job Info</div>\n      </header>\n      <div className=\"card-content\">\n        {hasError && <div className=\"notification is-danger\">Unable to extract info from URL</div>}\n\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>DocumentId</td>\n              <td>{documentId}</td>\n            </tr>\n            <tr>\n              <td>ContentType</td>\n              <td>{contentType}</td>\n            </tr>\n            <tr>\n              <td>BaseUrl</td>\n              <td>{baseUrl}</td>\n            </tr>\n            <tr>\n              <td>StartPage</td>\n              <td>\n                <input className=\"input is-small\" type=\"text\" value={startPage} onChange={e => setStartPage(e.target.value)} />\n              </td>\n            </tr>\n            <tr>\n              <td>EndPage</td>\n              <td>\n                <input className=\"input is-small\" type=\"text\" value={endPage} onChange={e => setEndPage(e.target.value)} />\n              </td>\n            </tr>\n            <tr>\n              <td>Final Page Test</td>\n              <td>\n                <a href={lastPageLink} target=\"_blank\" rel=\"noreferrer noopener\">{lastPageLink}</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <footer className=\"card-footer\">\n        <a href=\"#\" className=\"card-footer-item\" onClick={handleJobStartClick}>Start Job</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default ControlCard;\n","import React from \"react\";\n\nfunction DownloadStatusCard({ progress, downloadLink }) {\n  return (\n    <div className=\"control-card card\">\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">Download Status</div>\n      </header>\n      <div className=\"card-content\">\n      </div>\n      <footer className=\"card-footer\">\n        <a disabled={!downloadLink} href={downloadLink} className=\"card-footer-item\">Download Zip</a>\n      </footer>\n    </div>\n  );\n}\n\n\nexport default DownloadStatusCard;\n","import React, { useState, useCallback } from \"react\";\nimport './App.scss';\nimport ControlCard from \"./components/ControlCard\";\nimport DownloadStatusCard from \"./components/DownloadStatusCard\";\nimport { downloadPngRange } from \"./services/DownloadPngService\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n\n  const handleJobStartClick = useCallback((baseUrl, documentId, startPage, endPage, opts) => {\n    setIsLoading(true);\n\n    downloadPngRange(baseUrl, documentId, startPage, endPage, opts)\n      .then(downloadLink => setDownloadLink(downloadLink))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>pd-dl</header>\n\n      <div className=\"container\">\n        <textarea\n          className=\"textarea\"\n          placeholder=\"URL\"\n          rows=\"4\"\n          onChange={e => setUrl(e.target.value)}\n        />\n\n        <ControlCard url={url} onJobStartClick={handleJobStartClick} />\n\n        {downloadLink && <DownloadStatusCard downloadLink={downloadLink} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}